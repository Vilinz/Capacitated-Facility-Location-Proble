    '''
    def init_solution(self):
        for i in range(self.customer_num):
            self.current_state_of_customer.append(-1)
        for i in self.demand:
            self.total_demand += i
        self.current_capacity = self.capacity.copy()

        for i in range(self.customer_num):
            ran_select = random.random()
            if ran_select > 0.2:
                min = 100000
                index = 0
                for j in range(self.facility_num):
                    if min > self.assignment[j][i]:
                        min = self.assignment[j][i]
                        index = j
                if self.current_capacity[index] >= self.demand[i]:
                    self.current_capacity[index] -= self.demand[i]
                    self.current_state_of_customer[i] = index
                else:
                    tag = True
                    while tag:
                        ran = random.randint(0, self.facility_num - 1)
                        if self.current_capacity[ran] >= self.demand[i]:
                            self.current_capacity[ran] -= self.demand[i]
                            self.current_state_of_customer[i] = ran
                            tag = False
            else:
                tag_out = True
                while tag_out:
                    ran = random.randint(0, self.facility_num - 1)
                    if self.current_capacity[ran] >= self.demand[i]:
                        self.current_capacity[ran] -= self.demand[i]
                        self.current_state_of_customer[i] = ran
                        tag_out = False
        self.current_cost = self.calculate_cost(self.current_state_of_customer)
        self.new_capacity = self.current_capacity.copy()
        self.new_state_of_customer = self.current_state_of_customer.copy()
        print('cost ', self.current_cost)
        print('current cap ', self.current_capacity)
        print('current cu ', self.current_state_of_customer)
        ...



    def init_solution(self):
        for i in range(self.customer_num):
            self.current_state_of_customer.append(-1)
        for i in self.demand:
            self.total_demand += i
        self.current_capacity = self.capacity.copy()

        index = 0
        for i in range(self.customer_num):
            if self.current_capacity[index] - self.demand[i] >= 0:
                self.current_capacity[index] -= self.demand[i]
                self.current_state_of_customer[i] = index
            else:
                index += 1
                i -= 1
                # self.current_state_of_customer[i] = index
                # self.current_capacity[index] -= self.demand[i]
        self.current_cost = self.calculate_cost(self.current_state_of_customer)
        self.new_capacity = self.current_capacity.copy()
        self.new_state_of_customer = self.current_state_of_customer.copy()